C51 COMPILER V9.59.0.0   TIMER                                                             12/20/2020 19:27:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\timer.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.\Objects\timer.obj)

line level    source

   1          #include "all.h"
   2          
   3          //11月23日增加电机反转前，停止一下再开始反转
   4          bit CheckIrCounterFlag;
   5          bit MotorNeedWorkFlag;
   6          bit MotorTimerOverFlag;
   7          bit MotorRunLeftFlag;
   8          bit MotorPauseFlag;
   9          unsigned char MotorPauseValue;
  10          
  11          void InitailTimer(void)
  12          {
  13   1        
  14   1          TMCON = 0X07;  //------111 ;Timer0、Tiemr1和Tiemr2选择时钟Fsys
  15   1          
  16   1          //T0设置
  17   1          TMOD |= 0x01;         //0000 0001;Timer0设置工作方式1
  18   1          TL0 = (65536 - 48000)%256;    //溢出时间：时钟为Fsys，则24000*（1/Fsys）=1ms;
  19   1          TH0 = (65536 - 48000)/256;
  20   1          TR0 = 0;
  21   1          ET0 = 1;//定时器0允许
  22   1          TR0 = 1;//打开定时器0
  23   1        
  24   1      
  25   1      }
  26          
  27          
  28          void timer0() interrupt 1
  29          {
  30   1          TL0 = (65536 - 48000)%256;
  31   1          TH0 = (65536 - 48000)/256;
  32   1          //P04 = ~P04;
  33   1          
  34   1          
  35   1          if (WorkStatusValue == MotorWorkStatus)
  36   1          {
  37   2            if (MotorNeedWorkFlag)
  38   2              {
  39   3                MotorWorkTimer ++;
  40   3                if (MotorWorkTimer > motorWorkConst)
  41   3                {
  42   4                  CloseMotor();
  43   4                  MotorNeedWorkFlag = 0;
  44   4                  MotorPauseFlag = 1;
  45   4                  MotorPauseValue = 0;
  46   4                  //OpenMotorRunLeft();
  47   4                }
  48   3              }
  49   2              if(MotorPauseFlag)
  50   2              {
  51   3                  MotorPauseValue++;
  52   3                  if(MotorPauseValue >= motorPauseConst)
  53   3                  {
  54   4                    MotorPauseFlag = 0;
C51 COMPILER V9.59.0.0   TIMER                                                             12/20/2020 19:27:48 PAGE 2   

  55   4                    OpenMotorRunLeft();
  56   4                    //MotorRunLeftFlag = 1;
  57   4                  }
  58   3              }
  59   2              if (MotorRunLeftFlag)
  60   2                {
  61   3                  MotorRunLeftTimer ++;
  62   3                  if (MotorRunLeftTimer > motorComebackConst)
  63   3                    {
  64   4                        MotorRunLeftFlag = 0;
  65   4                        CloseMotor();
  66   4                        
  67   4                    }
  68   3                }
  69   2            MotorWokrKeepTimer ++ ;
  70   2            if (MotorWokrKeepTimer > KeepTimerOK)
  71   2            {
  72   3              MotorTimerOverFlag = 1; 
  73   3              CloseMotor();
  74   3            }
  75   2        
  76   2          }
  77   1          if (LowPowerFalshFlag)
  78   1          {
  79   2            LowerFlashCounter ++;
  80   2            if(LowerFlashCounter > FlashTimerConst)
  81   2            {
  82   3              LowerFlashCounter = 0;
  83   3              LowPowerFlashTimer ++;
  84   3              MotorWorkLed = ~MotorWorkLed;
  85   3              if (LowPowerFlashTimer > LowerFlashTimer)
  86   3              {
  87   4                LowPowerFalshFlag  = 0;         //lowerPower闪动结束
  88   4                
  89   4              }
  90   3            }
  91   2          }
  92   1      
  93   1          
  94   1      
  95   1      }
  96          
  97          
  98          
  99          
 100          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
